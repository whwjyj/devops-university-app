<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.beyond.university.department.model.mapper.DepartmentMapper">

    <sql id="selectDepartmentSql">
        SELECT department_no,
               department_name,
               category,
               open_yn ,
               capacity
        FROM department
    </sql>

    <resultMap id="departmentResultMap" type="Department">
        <id property="no" column="department_no" />
        <result property="name" column="department_name" />
        <result property="category" column="category" />
        <result property="openYn" column="open_yn" />
        <result property="capacity" column="capacity" />
    </resultMap>

    <!--
    동적 쿼리
      - 실행 시점에 쿼리 문장이 만들어져 실행되는 쿼리문을 동적 쿼리라 한다.

    1. if 요소
      - 특정 조건을 만족할 경우 요소 안의 쿼리문을 포함시킨다.

    2. where 요소
      - 쿼리문에 WHERE 절을 동적으로 포함할 때 사용하는 요소이다.
      - 요소 안의 내용이 없으면 WHERE을 포함하지 않는다.
      - 요소 안의 내용이 AND나 OR로 시작할 경우 AND나 OR를 제거한다.

    3. set 요소
      - 쿼리문에 set 절을 동적으로 포함할 때 사용하는 요소이다.
      - set 요소는 SET 절을 포함시키고 불필요한 콤마를 제거한다.
    -->
    <select id="selectDepartmentsCount" resultType="_int">
        SELECT COUNT(*)
        FROM department
        <where>
            <if test="openYn != null">
                open_yn = #{openYn}
            </if>
        </where>
    </select>

    <select id="selectAll" resultMap="departmentResultMap" >
        <include refid="selectDepartmentSql" />
        <if test="openYn != null">
            WHERE open_yn = #{openYn}
        </if>
        ORDER BY department_name ASC
    </select>

    <select id="selectDepartmentByNo" parameterType="string" resultMap="departmentResultMap">
        <include refid="selectDepartmentSql" />
        WHERE department_no = #{deptNo}
    </select>

    <insert id="insertDepartment" parameterType="Department">
        <selectKey resultType="string" keyProperty="no" order="BEFORE">
            SELECT LPAD(CONVERT(department_no, INT) + 1, 3, 0)
            FROM department
            ORDER BY department_no DESC LIMIT 1
        </selectKey>

        INSERT INTO department (
        department_no,
        department_name,
        category,
        open_yn ,
        capacity
        ) VALUES (
        #{no},
        #{name},
        #{category},
        #{openYn},
        #{capacity}
        )
    </insert>

    <update id="updateDepartment" parameterType="Department">
        UPDATE department
        <set>
            <if test="name != null">
                department_name = #{name},
            </if>
            <if test="category != null">
                category = #{category},
            </if>
            <if test="openYn != null">
                open_yn = #{openYn},
            </if>
            <if test="capacity >= 0">
                capacity = #{capacity}
            </if>
        </set>
        WHERE
        department_no = #{no}
    </update>

    <delete id="deleteDepartment" parameterType="string">
        DELETE
        FROM department
        WHERE department_no = #{deptNo}
    </delete>
</mapper>